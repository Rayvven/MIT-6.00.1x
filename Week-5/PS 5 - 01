class Message(object):
    ### DO NOT MODIFY THIS METHOD ###
    def __init__(self, text):
        '''
        Initializes a Message object
        text (string): the message's text
        a Message object has two attributes:
            self.message_text (string, determined by input text)
            self.valid_words (list, determined using helper function load_words
        '''
        self.message_text = text
        self.valid_words = load_words(WORDLIST_FILENAME) 


    def build_shift_dict(self, shift):

        dict = {}
        i = 0

        for letter in string.ascii_lowercase:
            # checks if letter index + shift out of range
            letter_index = string.ascii_lowercase.index(letter)
            new_letter_index = letter_index + shift
            if new_letter_index >= len(string.ascii_lowercase):
                new_shift = letter_index + shift - len(string.ascii_lowercase)
                dict[letter] = string.ascii_lowercase[new_shift]
            else:
                dict[letter] = string.ascii_lowercase[letter_index + shift]
        for letter in string.ascii_uppercase:
            # checks if letter index + shift out of range
            letter_index = string.ascii_uppercase.index(letter)
            new_letter_index = letter_index + shift
            if new_letter_index >= len(string.ascii_uppercase):
                new_shift = letter_index + shift - len(string.ascii_uppercase)
                dict[letter] = string.ascii_uppercase[new_shift]
            else:
                dict[letter] = string.ascii_uppercase[letter_index + shift]
        return dict



    def apply_shift(self, shift):

        dict = Message.build_shift_dict(self, shift)
        msg = ""
        for each in self.message_text:
            if each not in dict:
                msg += each
                continue
            msg += str(dict[each])
        return str(msg)
